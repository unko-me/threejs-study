THREE.OBJMTLLoader=function(){},THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(e,t,n){var r=this,a=new THREE.MTLLoader(e.substr(0,e.lastIndexOf("/")+1));a.load(t,function(t){var a=t;a.preload();var s=new THREE.XHRLoader(r.manager);s.setCrossOrigin(this.crossOrigin),s.load(e,function(e){var t=r.parse(e);t.traverse(function(e){if(e instanceof THREE.Mesh&&e.material.name){var t=a.create(e.material.name);t&&(e.material=t)}}),n(t)})})},parse:function(e,t){function n(e,t,n){return new THREE.Vector3(e,t,n)}function r(e,t){return new THREE.Vector2(e,t)}function a(e,t,n,r){return new THREE.Face3(e,t,n,r)}function s(e,t){v.length>0&&(E.vertices=v,E.mergeVertices(),E.computeFaceNormals(),E.computeBoundingSphere(),p.add(f),E=new THREE.Geometry,f=new THREE.Mesh(E,u)),void 0!==e&&(f.name=e),void 0!==t&&(u=new THREE.MeshLambertMaterial,u.name=t,f.material=u)}function o(e,t,n,r){E.faces.push(void 0===r?a(parseInt(e)-(l+1),parseInt(t)-(l+1),parseInt(n)-(l+1)):a(parseInt(e)-(l+1),parseInt(t)-(l+1),parseInt(n)-(l+1),[T[parseInt(r[0])-1].clone(),T[parseInt(r[1])-1].clone(),T[parseInt(r[2])-1].clone()]))}function d(e,t,n){E.faceVertexUvs[0].push([m[parseInt(e)-1].clone(),m[parseInt(t)-1].clone(),m[parseInt(n)-1].clone()])}function i(e,t,n){void 0===e[3]?(o(e[0],e[1],e[2],n),void 0!==t&&t.length>0&&d(t[0],t[1],t[2])):(void 0!==n&&n.length>0?(o(e[0],e[1],e[3],[n[0],n[1],n[3]]),o(e[1],e[2],e[3],[n[1],n[2],n[3]])):(o(e[0],e[1],e[3]),o(e[1],e[2],e[3])),void 0!==t&&t.length>0&&(d(t[0],t[1],t[3]),d(t[1],t[2],t[3])))}for(var l=0,c=new THREE.Object3D,p=c,E=new THREE.Geometry,u=new THREE.MeshLambertMaterial,f=new THREE.Mesh(E,u),v=[],T=[],m=[],h=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,H=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,R=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,g=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,L=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,w=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,I=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,M=e.split("\n"),b=0;b<M.length;b++){var F=M[b];F=F.trim();var O;if(0!==F.length&&"#"!==F.charAt(0))if(null!==(O=h.exec(F)))v.push(n(parseFloat(O[1]),parseFloat(O[2]),parseFloat(O[3])));else if(null!==(O=H.exec(F)))T.push(n(parseFloat(O[1]),parseFloat(O[2]),parseFloat(O[3])));else if(null!==(O=R.exec(F)))m.push(r(parseFloat(O[1]),parseFloat(O[2])));else if(null!==(O=g.exec(F)))i([O[1],O[2],O[3],O[4]]);else if(null!==(O=L.exec(F)))i([O[2],O[5],O[8],O[11]],[O[3],O[6],O[9],O[12]]);else if(null!==(O=w.exec(F)))i([O[2],O[6],O[10],O[14]],[O[3],O[7],O[11],O[15]],[O[4],O[8],O[12],O[16]]);else if(null!==(O=I.exec(F)))i([O[2],O[5],O[8],O[11]],[],[O[3],O[6],O[9],O[12]]);else if(/^o /.test(F))s(),l+=v.length,v=[],p=new THREE.Object3D,p.name=F.substring(2).trim(),c.add(p);else if(/^g /.test(F))s(F.substring(2).trim(),void 0);else if(/^usemtl /.test(F))s(void 0,F.substring(7).trim());else if(/^mtllib /.test(F)){if(t){var x=F.substring(7);x=x.trim(),t(x)}}else/^s /.test(F)||console.log("THREE.OBJMTLLoader: Unhandled line "+F)}return s(void 0,void 0),c}},THREE.EventDispatcher.prototype.apply(THREE.OBJMTLLoader.prototype);