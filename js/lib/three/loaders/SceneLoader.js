THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,a){var r=this,t=new THREE.XHRLoader(r.manager);t.setCrossOrigin(this.crossOrigin),t.load(e,function(t){r.parse(JSON.parse(t),a,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,a){this.geometryHandlers[e]={loaderClass:a}},addHierarchyHandler:function(e,a){this.hierarchyHandlers[e]={loaderClass:a}},parse:function(e,a,r){function t(e,a){return"relativeToHTML"==a?e:M+e}function i(){o(S.scene,x.objects)}function o(e,a){var r,i,s,n,l;for(var p in a){var c=S.objects[p],d=a[p];if(void 0===c){if(d.type&&d.type in L.hierarchyHandlers){if(void 0===d.loading){var f={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},E={};for(var v in d)v in f||(E[v]=d[v]);g=S.materials[d.material],d.loading=!0;var y=L.hierarchyHandlers[d.type].loaderObject;y.options?y.load(t(d.url,x.urlBaseType),m(p,e,g,d)):y.load(t(d.url,x.urlBaseType),m(p,e,g,d),E)}}else if(void 0!==d.geometry){if(u=S.geometries[d.geometry]){var T=!1;if(g=S.materials[d.material],T=g instanceof THREE.ShaderMaterial,i=d.position,s=d.rotation,n=d.scale,r=d.matrix,l=d.quaternion,d.material||(g=new THREE.MeshFaceMaterial(S.face_materials[d.geometry])),g instanceof THREE.MeshFaceMaterial&&0===g.materials.length&&(g=new THREE.MeshFaceMaterial(S.face_materials[d.geometry])),g instanceof THREE.MeshFaceMaterial)for(var R=0;R<g.materials.length;R++)T=T||g.materials[R]instanceof THREE.ShaderMaterial;T&&u.computeTangents(),d.skin?c=new THREE.SkinnedMesh(u,g):d.morph?(c=new THREE.MorphAnimMesh(u,g),void 0!==d.duration&&(c.duration=d.duration),void 0!==d.time&&(c.time=d.time),void 0!==d.mirroredLoop&&(c.mirroredLoop=d.mirroredLoop),g.morphNormals&&u.computeMorphNormals()):c=new THREE.Mesh(u,g),c.name=p,r?(c.matrixAutoUpdate=!1,c.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(c.position.fromArray(i),l?c.quaternion.fromArray(l):c.rotation.fromArray(s),c.scale.fromArray(n)),c.visible=d.visible,c.castShadow=d.castShadow,c.receiveShadow=d.receiveShadow,e.add(c),S.objects[p]=c}}else if("AmbientLight"===d.type||"PointLight"===d.type||"DirectionalLight"===d.type||"SpotLight"===d.type||"HemisphereLight"===d.type||"AreaLight"===d.type){var b=d.color,w=d.intensity,M=d.distance,A=d.position,j=d.rotation;switch(d.type){case"AmbientLight":H=new THREE.AmbientLight(b);break;case"PointLight":H=new THREE.PointLight(b,w,M),H.position.fromArray(A);break;case"DirectionalLight":H=new THREE.DirectionalLight(b,w),H.position.fromArray(d.direction);break;case"SpotLight":H=new THREE.SpotLight(b,w,M,1),H.angle=d.angle,H.position.fromArray(A),H.target.set(A[0],A[1]-M,A[2]),H.target.applyEuler(new THREE.Euler(j[0],j[1],j[2],"XYZ"));break;case"HemisphereLight":H=new THREE.DirectionalLight(b,w,M),H.target.set(A[0],A[1]-M,A[2]),H.target.applyEuler(new THREE.Euler(j[0],j[1],j[2],"XYZ"));break;case"AreaLight":H=new THREE.AreaLight(b,w),H.position.fromArray(A),H.width=d.size,H.height=d.size_y}e.add(H),H.name=p,S.lights[p]=H,S.objects[p]=H}else"PerspectiveCamera"===d.type||"OrthographicCamera"===d.type?(i=d.position,s=d.rotation,l=d.quaternion,"PerspectiveCamera"===d.type?h=new THREE.PerspectiveCamera(d.fov,d.aspect,d.near,d.far):"OrthographicCamera"===d.type&&(h=new THREE.OrthographicCamera(d.left,d.right,d.top,d.bottom,d.near,d.far)),h.name=p,h.position.fromArray(i),void 0!==l?h.quaternion.fromArray(l):void 0!==s&&h.rotation.fromArray(s),e.add(h),S.cameras[p]=h,S.objects[p]=h):(i=d.position,s=d.rotation,n=d.scale,l=d.quaternion,c=new THREE.Object3D,c.name=p,c.position.fromArray(i),l?c.quaternion.fromArray(l):c.rotation.fromArray(s),c.scale.fromArray(n),c.visible=void 0!==d.visible?d.visible:!1,e.add(c),S.objects[p]=c,S.empties[p]=c);if(c){if(void 0!==d.userData)for(var C in d.userData){var D=d.userData[C];c.userData[C]=D}if(void 0!==d.groups)for(var R=0;R<d.groups.length;R++){var O=d.groups[R];void 0===S.groups[O]&&(S.groups[O]=[]),S.groups[O].push(p)}}}void 0!==c&&void 0!==d.children&&o(c,d.children)}}function s(e,a,r){S.geometries[r]=e,S.face_materials[r]=a,i()}function n(e,a,r,t,o){var s=o.position,n=o.rotation,l=o.quaternion,m=o.scale;e.position.fromArray(s),l?e.quaternion.fromArray(l):e.rotation.fromArray(n),e.scale.fromArray(m),t&&e.traverse(function(e){e.material=t});var p=void 0!==o.visible?o.visible:!0;e.traverse(function(e){e.visible=p}),r.add(e),e.name=a,S.objects[a]=e,i()}function l(e){return function(a,r){a.name=e,s(a,r,e),T-=1,L.onLoadComplete(),c()}}function m(e,a,r,t){return function(i){var o;o=i.content?i.content:i.dae?i.scene:i,n(o,e,a,r,t),T-=1,L.onLoadComplete(),c()}}function p(e){return function(a,r){a.name=e,S.geometries[e]=a,S.face_materials[e]=r}}function c(){var e={totalModels:b,totalTextures:w,loadedModels:b-T,loadedTextures:w-R};L.callbackProgress(e,S),L.onLoadProgress(),0===T&&0===R&&(d(),a(S))}function d(){for(var e=0;e<A.length;e++){var a=A[e],r=S.objects[a.targetName];r?a.object.target=r:(a.object.target=new THREE.Object3D,S.scene.add(a.object.target)),a.object.target.userData.targetInverse=a.object}}function f(e,a){if(a(e),void 0!==e.children)for(var r in e.children)f(e.children[r],a)}var u,g,h,E,v,y,H,T,R,b,w,S,L=this,M=THREE.Loader.prototype.extractUrlBase(r),A=[],x=e;for(var j in this.geometryHandlers){var C=this.geometryHandlers[j].loaderClass;this.geometryHandlers[j].loaderObject=new C}for(var j in this.hierarchyHandlers){var C=this.hierarchyHandlers[j].loaderClass;this.hierarchyHandlers[j].loaderObject=new C}if(T=0,R=0,S={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},x.transform){var D=x.transform.position,O=x.transform.rotation,F=x.transform.scale;D&&S.scene.position.fromArray(D),O&&S.scene.rotation.fromArray(O),F&&S.scene.scale.fromArray(F),(D||O||F)&&(S.scene.updateMatrix(),S.scene.updateMatrixWorld())}var k,B,P=function(e){R-=e,c(),L.onLoadComplete()},G=function(e){return function(){P(e)}};for(k in x.fogs)B=x.fogs[k],"linear"===B.type?E=new THREE.Fog(0,B.near,B.far):"exp2"===B.type&&(E=new THREE.FogExp2(0,B.density)),y=B.color,E.color.setRGB(y[0],y[1],y[2]),S.fogs[k]=E;var q,N;for(q in x.geometries)N=x.geometries[q],N.type in this.geometryHandlers&&(T+=1,L.onLoadStart());for(var U in x.objects)f(x.objects[U],function(e){e.type&&e.type in L.hierarchyHandlers&&(T+=1,L.onLoadStart())});b=T;for(q in x.geometries)if(N=x.geometries[q],"cube"===N.type)u=new THREE.BoxGeometry(N.width,N.height,N.depth,N.widthSegments,N.heightSegments,N.depthSegments),u.name=q,S.geometries[q]=u;else if("plane"===N.type)u=new THREE.PlaneGeometry(N.width,N.height,N.widthSegments,N.heightSegments),u.name=q,S.geometries[q]=u;else if("sphere"===N.type)u=new THREE.SphereGeometry(N.radius,N.widthSegments,N.heightSegments),u.name=q,S.geometries[q]=u;else if("cylinder"===N.type)u=new THREE.CylinderGeometry(N.topRad,N.botRad,N.height,N.radSegs,N.heightSegs),u.name=q,S.geometries[q]=u;else if("torus"===N.type)u=new THREE.TorusGeometry(N.radius,N.tube,N.segmentsR,N.segmentsT),u.name=q,S.geometries[q]=u;else if("icosahedron"===N.type)u=new THREE.IcosahedronGeometry(N.radius,N.subdivisions),u.name=q,S.geometries[q]=u;else if(N.type in this.geometryHandlers){var _={};for(var W in N)"type"!==W&&"url"!==W&&(_[W]=N[W]);var I=this.geometryHandlers[N.type].loaderObject;I.load(t(N.url,x.urlBaseType),l(q),_)}else if("embedded"===N.type){var X=x.embeds[N.id],z="";if(X.metadata=x.metadata,X){var J=this.geometryHandlers.ascii.loaderObject,V=J.parse(X,z);p(q)(V.geometry,V.materials)}}var Y,Z;for(Y in x.textures)if(Z=x.textures[Y],Z.url instanceof Array){R+=Z.url.length;for(var K=0;K<Z.url.length;K++)L.onLoadStart()}else R+=1,L.onLoadStart();w=R;for(Y in x.textures){Z=x.textures[Y],void 0!==Z.mapping&&void 0!==THREE[Z.mapping]&&(Z.mapping=new THREE[Z.mapping]);var v;if(Z.url instanceof Array){for(var Q=Z.url.length,$=[],ea=0;Q>ea;ea++)$[ea]=t(Z.url[ea],x.urlBaseType);var I=THREE.Loader.Handlers.get($[0]);null!==I?(v=I.load($,G(Q)),v.mapping=Z.mapping):v=THREE.ImageUtils.loadTextureCube($,Z.mapping,G(Q))}else{var aa=t(Z.url,x.urlBaseType),ra=G(1),I=THREE.Loader.Handlers.get(aa);if(null!==I?v=I.load(aa,ra):(v=new THREE.Texture,I=new THREE.ImageLoader,function(e){I.load(aa,function(a){e.image=a,e.needsUpdate=!0,ra()})}(v)),v.mapping=Z.mapping,void 0!==THREE[Z.minFilter]&&(v.minFilter=THREE[Z.minFilter]),void 0!==THREE[Z.magFilter]&&(v.magFilter=THREE[Z.magFilter]),Z.anisotropy&&(v.anisotropy=Z.anisotropy),Z.repeat&&(v.repeat.set(Z.repeat[0],Z.repeat[1]),1!==Z.repeat[0]&&(v.wrapS=THREE.RepeatWrapping),1!==Z.repeat[1]&&(v.wrapT=THREE.RepeatWrapping)),Z.offset&&v.offset.set(Z.offset[0],Z.offset[1]),Z.wrap){var ta={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==ta[Z.wrap[0]]&&(v.wrapS=ta[Z.wrap[0]]),void 0!==ta[Z.wrap[1]]&&(v.wrapT=ta[Z.wrap[1]])}}S.textures[Y]=v}var ia,oa,sa;for(ia in x.materials){oa=x.materials[ia];for(sa in oa.parameters)if("envMap"===sa||"map"===sa||"lightMap"===sa||"bumpMap"===sa)oa.parameters[sa]=S.textures[oa.parameters[sa]];else if("shading"===sa)oa.parameters[sa]="flat"===oa.parameters[sa]?THREE.FlatShading:THREE.SmoothShading;else if("side"===sa)oa.parameters[sa]="double"==oa.parameters[sa]?THREE.DoubleSide:"back"==oa.parameters[sa]?THREE.BackSide:THREE.FrontSide;else if("blending"===sa)oa.parameters[sa]=oa.parameters[sa]in THREE?THREE[oa.parameters[sa]]:THREE.NormalBlending;else if("combine"===sa)oa.parameters[sa]=oa.parameters[sa]in THREE?THREE[oa.parameters[sa]]:THREE.MultiplyOperation;else if("vertexColors"===sa)"face"==oa.parameters[sa]?oa.parameters[sa]=THREE.FaceColors:oa.parameters[sa]&&(oa.parameters[sa]=THREE.VertexColors);else if("wrapRGB"===sa){var na=oa.parameters[sa];oa.parameters[sa]=new THREE.Vector3(na[0],na[1],na[2])}if(void 0!==oa.parameters.opacity&&oa.parameters.opacity<1&&(oa.parameters.transparent=!0),oa.parameters.normalMap){var la=THREE.ShaderLib.normalmap,ma=THREE.UniformsUtils.clone(la.uniforms),pa=oa.parameters.color,ca=oa.parameters.specular,da=oa.parameters.ambient,fa=oa.parameters.shininess;ma.tNormal.value=S.textures[oa.parameters.normalMap],oa.parameters.normalScale&&ma.uNormalScale.value.set(oa.parameters.normalScale[0],oa.parameters.normalScale[1]),oa.parameters.map&&(ma.tDiffuse.value=oa.parameters.map,ma.enableDiffuse.value=!0),oa.parameters.envMap&&(ma.tCube.value=oa.parameters.envMap,ma.enableReflection.value=!0,ma.reflectivity.value=oa.parameters.reflectivity),oa.parameters.lightMap&&(ma.tAO.value=oa.parameters.lightMap,ma.enableAO.value=!0),oa.parameters.specularMap&&(ma.tSpecular.value=S.textures[oa.parameters.specularMap],ma.enableSpecular.value=!0),oa.parameters.displacementMap&&(ma.tDisplacement.value=S.textures[oa.parameters.displacementMap],ma.enableDisplacement.value=!0,ma.uDisplacementBias.value=oa.parameters.displacementBias,ma.uDisplacementScale.value=oa.parameters.displacementScale),ma.diffuse.value.setHex(pa),ma.specular.value.setHex(ca),ma.ambient.value.setHex(da),ma.shininess.value=fa,oa.parameters.opacity&&(ma.opacity.value=oa.parameters.opacity);var ua={fragmentShader:la.fragmentShader,vertexShader:la.vertexShader,uniforms:ma,lights:!0,fog:!0};g=new THREE.ShaderMaterial(ua)}else g=new THREE[oa.type](oa.parameters);g.name=ia,S.materials[ia]=g}for(ia in x.materials)if(oa=x.materials[ia],oa.parameters.materials){for(var ga=[],ea=0;ea<oa.parameters.materials.length;ea++){var ha=oa.parameters.materials[ea];ga.push(S.materials[ha])}S.materials[ia].materials=ga}i(),S.cameras&&x.defaults.camera&&(S.currentCamera=S.cameras[x.defaults.camera]),S.fogs&&x.defaults.fog&&(S.scene.fog=S.fogs[x.defaults.fog]),L.callbackSync(S),c()}};