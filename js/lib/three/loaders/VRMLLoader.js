THREE.VRMLLoader=function(){},THREE.VRMLLoader.prototype={constructor:THREE.VRMLLoader,isRecordingPoints:!1,isRecordingFaces:!1,points:[],indexes:[],isRecordingAngles:!1,isRecordingColors:!1,angles:[],colors:[],recordingFieldname:null,load:function(e,r){var o=this,s=new XMLHttpRequest;s.addEventListener("load",function(e){var s=o.parse(e.target.responseText);o.dispatchEvent({type:"load",content:s}),r&&r(s)},!1),s.addEventListener("progress",function(e){o.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),s.addEventListener("error",function(){o.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),s.open("GET",e,!0),s.send(null)},parse:function(e){var r=function(){console.warn("VRML V1.0 not supported yet")},o=function(e,r){var o={},s=/(\b|\-|\+)([\d\.e]+)/,n=/([\d\.\+\-e]+)\s+([\d\.\+\-e]+)\s+([\d\.\+\-e]+)/g,i=function(e,r,o){var s=e.r-r.r,n=e.g-r.g,i=e.b-r.b,t=new THREE.Color;return t.r=e.r-o*s,t.g=e.g-o*n,t.b=e.b-o*i,t},t=function(e,r,o,s,n){for(var t,a,l,c,d,h,g,p,f=n?1:-1,E=["a","b","c","d"],v=[],y=1,u={},x={},R=!1,m=0;m<o.length;m++){var T={};T.y=f*Math.cos(o[m])*r,T.x=f*Math.sin(o[m])*r,v.push(T)}for(var F=0;F<e.faces.length;F++){t=e.faces[F],a=t instanceof THREE.Face3?3:4;for(var w=0;a>w;w++){c=t[E[w]],l=e.vertices[c];for(var b=0;b<s.length;b++)0===b?(u.x=0,u.y=n?r:-1*r):(u.x=v[b-1].x,u.y=v[b-1].y),x=v[b],void 0!==x?(R=n?l.y<=u.y&&l.y>x.y:l.y>=u.y&&l.y<x.y,R&&(g=s[b+1],h=s[b],y=Math.abs(l.y-u.y)/(u.y-x.y),d=i(h,g,y),t.vertexColors[w]=d)):void 0===t.vertexColors[w]&&(p=n?s.length-1:0,t.vertexColors[w]=s[p])}}},a=function(e,r){for(var o,i,t,a,l=[],c={},d=/[^\s,\[\]]+/g;null!=(o=d.exec(r));)l.push(o[0]);switch(i=l[0]){case"skyAngle":case"groundAngle":this.recordingFieldname=i,this.isRecordingAngles=!0,this.angles=[];break;case"skyColor":case"groundColor":this.recordingFieldname=i,this.isRecordingColors=!0,this.colors=[];break;case"point":this.recordingFieldname=i,this.isRecordingPoints=!0,this.points=[];break;case"coordIndex":this.recordingFieldname=i,this.isRecordingFaces=!0,this.indexes=[]}if(this.isRecordingFaces){if(l.length>0){a=[];for(var h=0;h<l.length;h++)/(-?\d+)/.test(l[h])&&("-1"===l[h]?(a.length>0&&this.indexes.push(a),a=[]):a.push(parseInt(l[h])))}/]/.exec(r)&&(this.isRecordingFaces=!1,e.coordIndex=this.indexes)}else if(this.isRecordingPoints){for(;null!==(l=n.exec(r));)t={x:parseFloat(l[1]),y:parseFloat(l[2]),z:parseFloat(l[3])},this.points.push(t);/]/.exec(r)&&(this.isRecordingPoints=!1,e.points=this.points)}else if(this.isRecordingAngles){if(l.length>0)for(var h=0;h<l.length;h++)s.test(l[h])&&this.angles.push(parseFloat(l[h]));/]/.exec(r)&&(this.isRecordingAngles=!1,e[this.recordingFieldname]=this.angles)}else if(this.isRecordingColors){for(;null!==(l=n.exec(r));)color={r:parseFloat(l[1]),g:parseFloat(l[2]),b:parseFloat(l[3])},this.colors.push(color);/]/.exec(r)&&(this.isRecordingColors=!1,e[this.recordingFieldname]=this.colors)}else if("NULL"!==l[l.length-1]&&"children"!==i){switch(i){case"diffuseColor":case"emissiveColor":case"specularColor":case"color":if(4!=l.length){console.warn("Invalid color format detected for "+i);break}c={r:parseFloat(l[1]),g:parseFloat(l[2]),b:parseFloat(l[3])};break;case"translation":case"scale":case"size":if(4!=l.length){console.warn("Invalid vector format detected for "+i);break}c={x:parseFloat(l[1]),y:parseFloat(l[2]),z:parseFloat(l[3])};break;case"radius":case"topRadius":case"bottomRadius":case"height":case"transparency":case"shininess":case"ambientIntensity":if(2!=l.length){console.warn("Invalid single float value specification detected for "+i);break}c=parseFloat(l[1]);break;case"rotation":if(5!=l.length){console.warn("Invalid quaternion format detected for "+i);break}c={x:parseFloat(l[1]),y:parseFloat(l[2]),z:parseFloat(l[3]),w:parseFloat(l[4])};break;case"ccw":case"solid":case"colorPerVertex":case"convex":if(2!=l.length){console.warn("Invalid format detected for "+i);break}c="TRUE"===l[1]?!0:!1}e[i]=c}return c},l=function(e){for(var r,o,s={string:"Scene",children:[]},n=s,i=0;i<e.length;i++){var t="",l=e[i];if(null===(result=/^\s+?$/g.exec(l))&&(l=l.trim(),""!==l)){if(/#/.exec(l)){var c=l.split("#");l=c[0],t=c[1]}if(r=/([^\s]*){1}\s?{/.exec(l)){var d={nodeType:r[1],string:l,parent:n,children:[],comment:t};n.children.push(d),n=d,/}/.exec(l)&&(o=/{(.*)}/.exec(l)[1],d.children.push(o),a(n,o),n=n.parent)}else/}/.exec(l)?n=n.parent:""!==l&&(a(n,l),n.children.push(l))}}return s},c=function(e,s){if("string"!=typeof e){var n=s;if("Transform"===e.nodeType||"Group"===e.nodeType){if(n=new THREE.Object3D,/DEF/.exec(e.string)&&(n.name=/DEF\s+(\w+)/.exec(e.string)[1],o[n.name]=n),void 0!==e.translation){var i=e.translation;n.position.set(i.x,i.y,i.z)}if(void 0!==e.rotation){var a=e.rotation;n.quaternion.setFromAxisAngle(new THREE.Vector3(a.x,a.y,a.z),a.w)}if(void 0!==e.scale){var l=e.scale;n.scale.set(l.x,l.y,l.z)}s.add(n)}else if("Shape"===e.nodeType)n=new THREE.Mesh,/DEF/.exec(e.string)&&(n.name=/DEF (\w+)/.exec(e.string)[1],o[n.name]=n),s.add(n);else if("Background"===e.nodeType){var d=20,h=2e4,g=new THREE.SphereGeometry(h,d,d),p=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide});if(e.skyColor.length>1)t(g,h,e.skyAngle,e.skyColor,!0),p.vertexColors=THREE.VertexColors;else{var f=e.skyColor[0];p.color.setRGB(f.r,f.b,f.g)}if(r.add(new THREE.Mesh(g,p)),void 0!==e.groundColor){h=12e3;var E=new THREE.SphereGeometry(h,d,d,0,2*Math.PI,.5*Math.PI,1.5*Math.PI),v=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,vertexColors:THREE.VertexColors});t(E,h,e.groundAngle,e.groundColor,!1),r.add(new THREE.Mesh(E,v))}}else{if(/geometry/.exec(e.string)){if("Box"===e.nodeType){var l=e.size;s.geometry=new THREE.BoxGeometry(l.x,l.y,l.z)}else if("Cylinder"===e.nodeType)s.geometry=new THREE.CylinderGeometry(e.radius,e.radius,e.height);else if("Cone"===e.nodeType)s.geometry=new THREE.CylinderGeometry(e.topRadius,e.bottomRadius,e.height);else if("Sphere"===e.nodeType)s.geometry=new THREE.SphereGeometry(e.radius);else if("IndexedFaceSet"===e.nodeType){for(var y,u=new THREE.Geometry,x=0,R=e.children.length;R>x;x++){var m,T=e.children[x];if("Coordinate"===T.nodeType){for(var F=0,w=T.points.length;w>F;F++){var b=T.points[F];m=new THREE.Vector3(b.x,b.y,b.z),u.vertices.push(m)}break}}for(var C=0,x=0,R=e.coordIndex.length;R>x;x++)for(y=e.coordIndex[x],C=0;y.length>=3&&C<y.length-2;){var H=new THREE.Face3(y[0],y[C+1],y[C+2],null);C++,u.faces.push(H)}!1===e.solid&&(s.material.side=THREE.DoubleSide),u.solid=e.solid,u.computeFaceNormals(),u.computeBoundingSphere(),/DEF/.exec(e.string)&&(u.name=/DEF (\w+)/.exec(e.string)[1],o[u.name]=u),s.geometry=u}return}if(/appearance/.exec(e.string)){for(var x=0;x<e.children.length;x++){var T=e.children[x];if("Material"===T.nodeType){var k=new THREE.MeshPhongMaterial;if(void 0!==T.diffuseColor){var M=T.diffuseColor;k.color.setRGB(M.r,M.g,M.b)}if(void 0!==T.emissiveColor){var L=T.emissiveColor;k.emissive.setRGB(L.r,L.g,L.b)}if(void 0!==T.specularColor){var l=T.specularColor;k.specular.setRGB(l.r,l.g,l.b)}if(void 0!==T.transparency){var i=T.transparency;k.opacity=Math.abs(1-i),k.transparent=!0}/DEF/.exec(e.string)&&(k.name=/DEF (\w+)/.exec(e.string)[1],o[k.name]=k),s.material=k;break}}return}}for(var x=0,w=e.children.length;w>x;x++){var T=e.children[x];c(e.children[x],n)}}else if(/USE/.exec(e)){var I=/USE\s+?(\w+)/.exec(e)[1];if(void 0==o[I])console.warn(I+" is not defined.");else if(/appearance/.exec(e)&&I)s.material=o[I].clone();else if(/geometry/.exec(e)&&I)s.geometry=o[I].clone(),void 0!==o[I].solid&&o[I].solid===!1&&(s.geometry.solid=!1,s.material.side=THREE.DoubleSide);else if(I){var n=o[I].clone();s.add(n)}}};c(l(e),r)},s=new THREE.Scene,n=e.split("\n"),i=n.shift();return/V1.0/.exec(i)?r(n,s):/V2.0/.exec(i)&&o(n,s),s}},THREE.EventDispatcher.prototype.apply(THREE.VRMLLoader.prototype);