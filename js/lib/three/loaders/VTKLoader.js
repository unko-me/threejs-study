THREE.VTKLoader=function(){},THREE.VTKLoader.prototype={constructor:THREE.VTKLoader,load:function(e,t){var r=this,n=new XMLHttpRequest;n.addEventListener("load",function(e){var n=r.parse(e.target.responseText);r.dispatchEvent({type:"load",content:n}),t&&t(n)},!1),n.addEventListener("progress",function(e){r.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),n.addEventListener("error",function(){r.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),n.open("GET",e,!0),n.send(null)},parse:function(e){var t,r,n=new THREE.Geometry,o=function(e,t,r){n.vertices.push(new THREE.Vector3(e,t,r))},a=function(e,t,r){n.faces.push(new THREE.Face3(e,t,r))};for(t=/([\+|\-]?[\d]+[\.]*[\d|\-|e]*)[ ]+([\+|\-]?[\d]+[\.]*[\d|\-|e]*)[ ]+([\+|\-]?[\d]+[\.]*[\d|\-|e]*)/g;null!==(r=t.exec(e));)o(parseFloat(r[1]),parseFloat(r[2]),parseFloat(r[3]));for(t=/3[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!==(r=t.exec(e));)a(parseInt(r[1]),parseInt(r[2]),parseInt(r[3]));for(t=/4[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!==(r=t.exec(e));)a(parseInt(r[1]),parseInt(r[2]),parseInt(r[4])),a(parseInt(r[2]),parseInt(r[3]),parseInt(r[4]));return n.computeFaceNormals(),n.computeVertexNormals(),n.computeBoundingSphere(),n}},THREE.EventDispatcher.prototype.apply(THREE.VTKLoader.prototype);